name: Publish To GCR
on:
  push:
    tags:
      - 'v*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-test-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-test-
      - uses: actions/checkout@v2
      - name: Setup GraalVM CE
        uses: DeLaGuardo/setup-graalvm@8bbfe44ef9c6f5c07e5af036a1bffd561c037d18
        with:
          graalvm-version: 20.3.0.java11
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Docker Login
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_URL }}
          username: _json_key
          password: ${{ secrets.GCLOUD_SERVICE_KEY }}
      - name: Build The App
        run: ./gradlew assemble --no-daemon
      - name: Push docker image
        env:
          TESTCONTAINERS_RYUK_DISABLED: true
          DOCKER_IMAGE: ${{ secrets.DOCKER_REGISTRY_URL }}/${{ secrets.PROJECT_ORGANIZATION }}/${{ secrets.PROJECT_ID }}
        run: |
          ./gradlew dockerPushNative --no-daemon
      - name: Setup GCP Service Account
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.PROJECT_ID }}
          service_account_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
          export_default_credentials: true
      - name: Deploy To GCR
        run: |
          gcloud run deploy ${{ secrets.PROJECT_ID }} \
          --region us-central1 \
          --image ${{ secrets.DOCKER_REGISTRY_URL }}/${{ secrets.PROJECT_ORGANIZATION }}/${{ secrets.PROJECT_ID }} \
          --platform managed \
          --allow-unauthenticated \
          --project ${{ secrets.PROJECT_ORGANIZATION }}